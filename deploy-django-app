#!/bin/bash
# Deploying a django app

code_clone()
{
  if [ -d "django-notes-app" ] 
  then
    echo "Django app already exists.. Exiting.."
    cd django-notes-app
  #  exit 0
  else
    git clone https://github.com/LondheShubham153/django-notes-app.git
    cd django-notes-app
    if [ $? != 0 ]; then
      echo "Failed to clone the code"
      exit 1
    fi
  
  fi
}

install_requirements()
{
  echo "Installing dependencies.."
 #sudo apt-get install docker.io nginx -y

#This command will update the apt package index, this way we can use apt to use the repository over https.
  sudo apt update
  sudo apt-get install \
  ca-certificates \
  curl \
  gnupg \
  lsb-release

  #Add Dockerâ€™s official GPG key.
  if [ ! '/usr/share/keyrings/docker-archive-keyring.gpg' ]; then
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  fi
  #Use the following command to set up the stable repository
  echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  ls -al /etc/apt/sources.list.d | grep docker

  sudo apt update
  sudo apt-get install docker-ce docker-ce-cli containerd.io -y

  sudo apt-get install nginx -y docker-compose

}

required_restarts()
{
  sudo chown $USER /var/run/docker.sock
  sudo systemctl enable docker
  sudo systemctl enable nginx
  sudo systemctl restart docker
}

deploy()
{
  
  sudo docker build -t notes-app .
  sudo docker-compose up -d
}

echo "*************** DEPLOYMENT STARTED *********************"

if ! code_clone; then
  echo "Code Directory already exists"
  cd django-notes-app
fi  
if ! install_requirements; then
  echo "Installation failed"
fi  
if ! required_restarts; then
  echo "System fault identified"
  exit 1
fi
if ! deploy; then
  echo "Deployment failed. Mailing the admin..."
  exit 1
fi

echo "*************** DEPLOYMENT DONE *********************"
